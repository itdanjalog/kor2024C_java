package day10_1014월.real.STEP3;

// 용도1 : 객체의 설계도 클래스
public class User { // class s
    // 클래스의 멤버
    // 1. 멤버변수/필드 : 객체의 고유특성 값을 저장하는 메모리 역할
    String name;    // '이름' 멤버변수 정의
    int age;        // '나이' 멤버변수 정의
    char gender;    // '성별' 멤버변수 정의
    // 2. 생성자 : 객체 생성할때 멤버변수를 초기화 하는 역할
        // 1. 생성자명은 클래스명과 동일 해야한다.
        // 2. 매개변수가 존재하고 반환 이 없이므로 반환타입 생략한다.
            // 매개변수명 과 클래스의 필드명이 겹칠 수 있다.
            // this란 : 생성자/메소드 에서 매개변수명과 클래스의 필드명이 겹칠때 필드명을 식별하는 키워드
        // 3. 디폴트/기본 생성자는 컴파일 할때 자동으로 생성된다.
            // - 단) 생성자가 1개도 없을때만 자동
        // 생성자의 형태
            // 클래스명( 타입 매개변수명 , 타입 매개변수명 ){ }
    //2-1 기본 생성자 : 매개변수가 없는 생성자
    User( ){ }
    //2-2 생성자 : 매개변수가 있는 생성자
        // 매개변수 : 함수/생성자 안으로 들어오는 값을 변수에 저장
    User( String name ){ // 매개변수가 String 타입의 name 변수명으로 선언
        this.name = name;
        // this.name : 클래스의 name 필드 뜻  // name : 매개변수 name
        // * 매개변수의 값을 name 필드의 대입 하라는 뜻을 가진 코드
    }
    // 2-3 생성자 : 매개변수가 2개인 생성자
    User( String 이름 , int 나이 ){
        name = 이름; // 매개변수명 과 클래스의 필드명이 다르면 this는 사용하지 않아도 된다.
        age = 나이;
    }
    // 2-4 생성자 : 매개변수가 3개인 생성자 ,
        // 관례적으로 매개변수명과 필드명은 동일한 이름으로 사용한다. this로 구분한다.
    User( String name , int age , char gender ){
        this.name = name;
        this.age = age;
        this.gender = gender;
    }

    // 3. 메소드

} // class end





